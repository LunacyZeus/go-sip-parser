//通过呼入方向的会话匹配呼出的
	for inCallId, inSession := range manager.Sessions {
		if inSession.Status != COMPLETED { //只解析成功的
			continue
		}

		ani := inSession.ANIPhone   //To
		dnis := inSession.DNISPhone //From
		if dnis == "" || ani == "" {
			//跳过没号码的
			continue
		}

		/*
			if next.InviteTime-current.InviteTime > 1000 {
							break
						}
		*/

		//log.Printf("%s ani(%s) dnis(%s)", inCallId, ani, dnis)

		for i := 0; i < len(sortedSessions); i++ {
			current := sortedSessions[i]

			if current.Status != COMPLETED { //只解析成功的
				continue
			}

			// 检查滑动窗口中的后续元素
			for j := i + 1; j < len(sortedSessions); j++ {
				next := sortedSessions[j]
				// 如果 InviteTime 超过 1000 的范围，停止检查
				if next.InviteTime-current.InviteTime > 1000 {
					break
				}

				if strings.Contains(current.ANIPhone, ani) || strings.Contains(current.DNISPhone, dnis) {
					if int(math.Abs(float64(inSession.InviteTime-current.InviteTime))) > 1000 {
						continue
					}

					log.Printf("MatchCall %s %s=>%s/%s %s/%s", inCallId, current.CallID, ani, current.ANIPhone, dnis, current.DNISPhone)
					inSession.RelatedCallID = current.CallID
					inSession.OutVia = current.Via
					manager.Sessions[inCallId] = inSession

					current.RelatedCallID = inCallId
					manager.Sessions[current.CallID] = current
					break
				}
			}
		}
	}